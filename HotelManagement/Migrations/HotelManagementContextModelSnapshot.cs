// <auto-generated />
using System;
using HotelManagement.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelManagement.Migrations
{
    [DbContext(typeof(HotelManagementContext))]
    partial class HotelManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelManagement.Model.Account", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("profile_picture");

                    b.Property<string>("StaffId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("staff_id")
                        .IsFixedLength();

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Username")
                        .HasName("PK__account__F3DBC573C3AB2CB1");

                    b.HasIndex(new[] { "StaffId" }, "UQ__account__1963DD9DC28BDAE4")
                        .IsUnique();

                    b.ToTable("account", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Model.Booking", b =>
                {
                    b.Property<string>("BookingId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("booking_id")
                        .IsFixedLength();

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("check_in_date");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("check_out_date");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_date");

                    b.Property<int>("GuestQuantity")
                        .HasColumnType("int")
                        .HasColumnName("guest_quantity");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("invoice_id")
                        .IsFixedLength();

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("room_id")
                        .IsFixedLength();

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money")
                        .HasColumnName("total_amount");

                    b.HasKey("BookingId")
                        .HasName("PK__booking__5DE3A5B13FD7C644");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("RoomId");

                    b.ToTable("booking", null, t =>
                        {
                            t.HasTrigger("CheckGuestQuantity");

                            t.HasTrigger("InsertAmountBooking");

                            t.HasTrigger("UpdateAmountBooking");
                        });
                });

            modelBuilder.Entity("HotelManagement.Model.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("customer_id")
                        .IsFixedLength();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("address");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("contact_number");

                    b.Property<string>("CreditCard")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("credit_card");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_date");

                    b.Property<string>("Email")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("gender");

                    b.Property<string>("IdProof")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("id_proof");

                    b.HasKey("CustomerId")
                        .HasName("PK__customer__CD65CB85EA241678");

                    b.HasIndex(new[] { "ContactNumber" }, "UQ__customer__A1D1BF21831D3536")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__customer__AB6E61640EAC5AAA")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex(new[] { "CreditCard" }, "UQ__customer__C0CC90664A4CED78")
                        .IsUnique()
                        .HasFilter("[credit_card] IS NOT NULL");

                    b.HasIndex(new[] { "IdProof" }, "UQ__customer__DFB75B10A382F22D")
                        .IsUnique();

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Model.Invoice", b =>
                {
                    b.Property<string>("InvoiceId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("invoice_id")
                        .IsFixedLength();

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("customer_id")
                        .IsFixedLength();

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_date");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("invoice_date");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("payment_type");

                    b.Property<string>("StaffId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("staff_id")
                        .IsFixedLength();

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money")
                        .HasColumnName("total_amount");

                    b.HasKey("InvoiceId")
                        .HasName("PK__invoice__F58DFD4983235F70");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.ToTable("invoice", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Model.Room", b =>
                {
                    b.Property<string>("RoomId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("room_id")
                        .IsFixedLength();

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_date");

                    b.Property<string>("Notes")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("notes");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("room_number")
                        .IsFixedLength();

                    b.Property<string>("RoomTypeId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("room_type_id")
                        .IsFixedLength();

                    b.HasKey("RoomId")
                        .HasName("PK__room__19675A8A401BF51A");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("room", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Model.RoomType", b =>
                {
                    b.Property<string>("RoomTypeId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("room_type_id")
                        .IsFixedLength();

                    b.Property<int>("BedAmount")
                        .HasColumnType("int")
                        .HasColumnName("bed_amount");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_date");

                    b.Property<decimal>("RoomPrice")
                        .HasColumnType("money")
                        .HasColumnName("room_price");

                    b.Property<string>("RoomTypeDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("room_type_desc");

                    b.Property<byte[]>("RoomTypeImg")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("room_type_img");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("room_type_name");

                    b.HasKey("RoomTypeId")
                        .HasName("PK__room_typ__42395E8460623310");

                    b.HasIndex(new[] { "RoomTypeName" }, "UQ__room_typ__511E79A8737E6009")
                        .IsUnique();

                    b.ToTable("room_type", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Model.Service", b =>
                {
                    b.Property<string>("ServiceId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("service_id")
                        .IsFixedLength();

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_date");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("service_name");

                    b.Property<decimal>("ServicePrice")
                        .HasColumnType("money")
                        .HasColumnName("service_price");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("service_type");

                    b.HasKey("ServiceId")
                        .HasName("PK__service__3E0DB8AFF2C18B61");

                    b.HasIndex(new[] { "ServiceName" }, "UQ__service__4A8EDF399222ED33")
                        .IsUnique();

                    b.ToTable("service", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Model.ServiceUse", b =>
                {
                    b.Property<string>("InvoiceId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("invoice_id")
                        .IsFixedLength();

                    b.Property<string>("ServiceId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("service_id")
                        .IsFixedLength();

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_date");

                    b.Property<int?>("ServiceQuantity")
                        .HasColumnType("int")
                        .HasColumnName("service_quantity");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money")
                        .HasColumnName("total_amount");

                    b.HasKey("InvoiceId", "ServiceId")
                        .HasName("su_booking_service_pk");

                    b.HasIndex("ServiceId");

                    b.ToTable("service_use", null, t =>
                        {
                            t.HasTrigger("InsertAmountService");

                            t.HasTrigger("UpdateAmountService");
                        });
                });

            modelBuilder.Entity("HotelManagement.Model.Staff", b =>
                {
                    b.Property<string>("StaffId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("staff_id")
                        .IsFixedLength();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("birthday");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("contact_number");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_date");

                    b.Property<string>("Email")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("gender");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("position");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("salary");

                    b.HasKey("StaffId")
                        .HasName("PK__staff__1963DD9CFB396E3F");

                    b.HasIndex(new[] { "ContactNumber" }, "UQ__staff__A1D1BF21B9E63F8F")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__staff__AB6E6164B8072C71")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("staff", (string)null);
                });

            modelBuilder.Entity("HotelManagement.Model.Account", b =>
                {
                    b.HasOne("HotelManagement.Model.Staff", "Staff")
                        .WithOne("Account")
                        .HasForeignKey("HotelManagement.Model.Account", "StaffId")
                        .IsRequired()
                        .HasConstraintName("acc_staff_id_fk");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HotelManagement.Model.Booking", b =>
                {
                    b.HasOne("HotelManagement.Model.Invoice", "Invoice")
                        .WithMany("Bookings")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("b_invoice_id_fk");

                    b.HasOne("HotelManagement.Model.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("b_room_id_fk");

                    b.Navigation("Invoice");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelManagement.Model.Invoice", b =>
                {
                    b.HasOne("HotelManagement.Model.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("in_customer_id_fk");

                    b.HasOne("HotelManagement.Model.Staff", "Staff")
                        .WithMany("Invoices")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("in_staff_id_fk");

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HotelManagement.Model.Room", b =>
                {
                    b.HasOne("HotelManagement.Model.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .IsRequired()
                        .HasConstraintName("r_room_type_id_fk");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HotelManagement.Model.ServiceUse", b =>
                {
                    b.HasOne("HotelManagement.Model.Invoice", "Invoice")
                        .WithMany("ServiceUses")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("su_invoice_id_fk");

                    b.HasOne("HotelManagement.Model.Service", "Service")
                        .WithMany("ServiceUses")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("su_service_id_fk");

                    b.Navigation("Invoice");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HotelManagement.Model.Customer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("HotelManagement.Model.Invoice", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("ServiceUses");
                });

            modelBuilder.Entity("HotelManagement.Model.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HotelManagement.Model.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelManagement.Model.Service", b =>
                {
                    b.Navigation("ServiceUses");
                });

            modelBuilder.Entity("HotelManagement.Model.Staff", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
